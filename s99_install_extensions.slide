Golang 安裝與環境設定
為什麼我要學習 Go
19:30 28 Mar 2020
Tags: Golang

陳敬翔
中華電信學院, 資訊學系培訓師
oneleo@cht.com.tw
https://www.facebook.com/oneleo760823
@oneleo760823

# --------------------------------------------------

* 1、在 Windows 內安裝 Go 語言官方安裝程式

# --------------------------------------------------

* 在 Windows 內安裝 Go 語言官方安裝程式

- 1、安裝 Go 語言安裝程式，請至 [[https://golang.org/][Golang]] 網站下載【go*.windows-amd64.msi】安裝程式

- 請先點選官方網站的【Download Go】鈕

.image ./images/99/99.01.03.png

# --------------------------------------------------

* 在 Windows 內安裝 Go 語言官方安裝程式

- 2、接著請點選左側【go*.windows-amd64.msi】鈕

.image ./images/99/99.01.04.png

# --------------------------------------------------

* 在 Windows 內安裝 Go 語言官方安裝程式

- 3、執行安裝程式後，請點選下方的【Next】鈕

.image ./images/99/99.01.06.png

# --------------------------------------------------

* 在 Windows 內安裝 Go 語言官方安裝程式

- 4、請勾選【I accept the terms in the License Agreement】鈕同意軟體使用條款

- 接著請點選下方的【Next】鈕

.image ./images/99/99.01.07.png

# --------------------------------------------------

* 在 Windows 內安裝 Go 語言官方安裝程式

- 5、請直接點選【Next】鈕將 Go 語言程式安裝在預設位置「C:\Go\」內

.image ./images/99/99.01.08.png

# --------------------------------------------------

* 在 Windows 內安裝 Go 語言官方安裝程式

- 6、請點選【Install】鈕開始安裝 Go 課言程式

.image ./images/99/99.01.09.png

# --------------------------------------------------

* 在 Windows 內安裝 Go 語言官方安裝程式

- 7、安裝完成後請直接點選【Finish】

.image ./images/99/99.01.10.png

# --------------------------------------------------

* 在 Windows 內安裝 Go 語言官方安裝程式

- 8、Go 的工作區位置在環境變數「GOPATH」內，在這裡我們使用 PowerShell 來查看

- 請在「開始選單」上按【滑鼠右鍵】→ 再點選【Windows PowerShell(I)】

.image ./images/99/99.01.11.png

# --------------------------------------------------

* 在 Windows 內安裝 Go 語言官方安裝程式

- 9、請依序在「PS C:\Users\user> 」右方輸入下列指令 → 並按下鍵盤的【Enter】鍵來執行，即可以得知環境變數「GOPATH」等同於「%USERPROFILE%\go」路徑（註：而環境變數「USERPROFILE」則等同於「C:\Users\<使用者名稱>」路徑）

- 註：輸入指令時不包含最左邊的「PS > 」字元，此字元表示這行是要輸入的「指令」

    PS > go env

.image ./images/99/99.01.12-gopath.png

# --------------------------------------------------

* 在 Windows 內安裝 Go 語言官方安裝程式

- 另外 go 還有哪一些指令可使用，可使用 go help 指令來查看

    PS > go help

.image ./images/99/99.01.13-gohelp.png

# --------------------------------------------------

* 在 Windows 內安裝 Go 語言官方安裝程式

- 值得注意的是 Go 的工作區 %GOPATH% 其結構包含以下目錄：

- src：參照的外部套件目錄

- pkg：編譯時，生成的物件檔案目錄

- bin：編譯後可執行的程式目錄

    %GOPATH%
        bin/
            hello                           # 生成的執行檔
        pkg/
            linux_amd64/                    # 編譯的平臺名稱（如 darwin_amd64、linux_amd64 等）
                github.com/golang/example/
                    stringutil.a            # 編譯時，生成的對象檔案
        src/
            github.com/golang/example/
                hello/
                    hello.go                # Git 庫的程式碼
                stringutil/
                    reverse.go              # Git 庫的程式碼
                    reverse_test.go         # Git 庫的程式碼（測試用的程式）

# --------------------------------------------------

* 在 Windows 內安裝 Go 語言官方安裝程式

- 10、接下來我們要參考[[https://golang.org/doc/install#testing][官方手冊]]來建置第一支 Go 的範例程式

- 請在「開始選單」上按【滑鼠右鍵】→ 再點選【檔案總管(E)】

.image ./images/99/99.01.14.png

# --------------------------------------------------

* 在 Windows 內安裝 Go 語言官方安裝程式

- 11、接著請在上方「路徑」中輸入【%GOPATH%】→ 按下鍵盤上的【Enter】鍵

.image ./images/99/99.01.15-gopath.png

# --------------------------------------------------

* 在 Windows 內安裝 Go 語言官方安裝程式

- 12、可以直接進到 Go 的工作目錄「%USERPROFILE%\go」中，但目前尚無「src」參照的外部套件目錄，所以我們要建置一個出來

.image ./images/99/99.01.16.png

# --------------------------------------------------

* 在 Windows 內安裝 Go 語言官方安裝程式

- 13、請點選上方【常用】→ 再點選【新增資料夾】

.image ./images/99/99.01.17-NewFolder.png

# --------------------------------------------------

* 在 Windows 內安裝 Go 語言官方安裝程式

- 13、請輸入新資料夾的名稱為【src】→ 再點選鍵盤上的【Enter】鍵完成目錄建置

.image ./images/99/99.01.18.png

# --------------------------------------------------

* 在 Windows 內安裝 Go 語言官方安裝程式

- 14、請進到剛才新增的【%GOPATH%\src】目錄中

.image ./images/99/99.01.19.png

# --------------------------------------------------

* 在 Windows 內安裝 Go 語言官方安裝程式

- 15、請進到剛才新增的【%GOPATH%\src】目錄中再新增一個名為【hello】的資料夾來作為此測試專案的名稱

.image ./images/99/99.01.21-NewProject.png

# --------------------------------------------------

* 在 Windows 內安裝 Go 語言官方安裝程式

- 16、此時要建立第一支 go 檔案，請點選上方【常用】→ 再點選【新增項目】→ 選擇【文字文件】

.image ./images/99/99.01.22.png

# --------------------------------------------------

* 在 Windows 內安裝 Go 語言官方安裝程式

- 17、我們先將此「文字文件」命名為【hello】→ 再開啟此【hello.txt】檔

.image ./images/99/99.01.23.png

# --------------------------------------------------

* 在 Windows 內安裝 Go 語言官方安裝程式

- 18、請在此「hello.txt」輸入下列程式碼

.code -numbers ./code/c01hello/hello.go

.image ./images/99/99.01.24.png

# --------------------------------------------------

* 在 Windows 內安裝 Go 語言官方安裝程式

- 19、再請點選最右上角【關閉】鈕 → 點選【儲存(S)】

.image ./images/99/99.01.25.png

# --------------------------------------------------

* 在 Windows 內安裝 Go 語言官方安裝程式

- 20、因為 Go 語言無法認得「.txt」檔，故要修改其副檔名為「.go」

- 請先點選左上方【檢視】→ 勾選右側的【副檔名】以利將檔案副檔名修正

.image ./images/99/99.01.26.png

# --------------------------------------------------

* 在 Windows 內安裝 Go 語言官方安裝程式

- 21、請將原先完整檔名為「hello.txt」修正成【hello.go】→ 再點選【是(Y)】確定要完成此次變更

.image ./images/99/99.01.27.png

# --------------------------------------------------

* 在 Windows 內安裝 Go 語言官方安裝程式

.image ./images/99/99.01.28.png

# --------------------------------------------------

* 在 Windows 內安裝 Go 語言官方安裝程式

- 22、緊接著要「編譯」及「執行」我們建立完成的 Go 程式碼

- 請在「開始選單」上按【滑鼠右鍵】→ 再點選【Windows PowerShell(I)】

.image ./images/99/99.01.29.png

# --------------------------------------------------

* 在 Windows 內安裝 Go 語言官方安裝程式

- 23、因程式碼放置在工作區「%GOPATH%\src\*hello*」內，所以可輸入下方指令

    PS > go run hello

- 可看到我們建立的程式碼已順利編譯完成及執行，執行結果為輸出「hello, world」

- 註：若是放到非 Go 語言的工作區「%GOPATH%」，則需給予完整路徑，例如「PS > go run "$ENV:GOPATH/src/hello/hello.go"」，但不建議

.image ./images/99/99.01.30.png


# --------------------------------------------------

* 在 Windows 內安裝 Go 語言官方安裝程式

- 24、當我們要下載官方或第三方 Go 語言套件時，必須要使用「go get」指令

- 但是當我們嘗試使用下方指令下載第三方套件時會發生「go: missing Git command.」錯誤，代表我們沒有安裝「Git」版本控管軟體

    PS > go get -u -v github.com\oneleo\golang-cht

- 註：參數「-u」表示一律下載最新版本，參數「-v」是顯示下載結果

.image ./images/99/99.01.31.01-PowerShell.png

# --------------------------------------------------

* 2、在 Windows 內安裝 Git 版本控管軟體

# --------------------------------------------------

* 3、在 Windows 內安裝 Visual Studio Code 整合開發環境

# --------------------------------------------------

* 4、在 Windows 內安裝 C/C++ 程式編譯器：GCC、Make

# --------------------------------------------------

* 在 Windows 內安裝 C/C++ 程式編譯器：GCC、Make

- 1、安裝 GCC、Make 編譯器的下載工具，請至 [[https://www.msys2.org/][MSYS2]] 網站下載【msys2-x86_64-*.exe】安裝程式

.image ./images/99/99.04.02.png

# --------------------------------------------------

* 在 Windows 內安裝 C/C++ 程式編譯器：GCC、Make

- 2、執行安裝程式後，請點選下方的【Next】鈕

.image ./images/99/99.04.03.png

# --------------------------------------------------

* 在 Windows 內安裝 C/C++ 程式編譯器：GCC、Make

- 3、請直接點選【Next】鈕將 MSYS2 安裝在預設位置「C:\msys64」內

.image ./images/99/99.04.04.png

# --------------------------------------------------

* 在 Windows 內安裝 C/C++ 程式編譯器：GCC、Make

- 4、請直接點選【Next】鈕安裝 MSYS2，並設置 MSYS2 在「開始選單」的顯示名稱為預設的「MSYS2 64bit」

.image ./images/99/99.04.05.png

# --------------------------------------------------

* 在 Windows 內安裝 C/C++ 程式編譯器：GCC、Make

- 5、安裝完成後請直接點選【Finish】鈕，並啟動 MSYS2（預設已勾選「Run MSYS2 64bit.」）

.image ./images/99/99.04.06.png

# --------------------------------------------------

* 在 Windows 內安裝 C/C++ 程式編譯器：GCC、Make

- 7、初次執行 MSYS2 時要進行更新 MSYS2 核心套件

- 請在「$」右方輸入指令【pacman -Syu --noconfirm】→ 並按下鍵盤的【Enter】鍵來執行更新

.image ./images/99/99.04.07.png

# --------------------------------------------------

* 在 Windows 內安裝 C/C++ 程式編譯器：GCC、Make

- 8、更新完成後顯示「close your terminal window instead of calling exit」訊息表示需將 MSYS2 重新啟動

- 請點選右上角【X】鈕來關閉 MSYS2

.image ./images/99/99.04.08.png

# --------------------------------------------------

* 在 Windows 內安裝 C/C++ 程式編譯器：GCC、Make

- 9、點選螢幕左下角的【開始選單】→ 點選左側的【MSYS2 64bit】→ 點選【MSYS2 MSYS】來啟動 MSYS2

.image ./images/99/99.04.09.png

# --------------------------------------------------

* 在 Windows 內安裝 C/C++ 程式編譯器：GCC、Make

- 10、更新 MSYS2 一般套件

- 請輸入指令【pacman -Su --noconfirm】→ 並按下鍵盤的【Enter】鍵來執行更新

.image ./images/99/99.04.10.png

# --------------------------------------------------

* 在 Windows 內安裝 C/C++ 程式編譯器：GCC、Make

- 11、使用 MSYS2 安裝 GCC、Make 編譯器

- 請輸入指令【pacman -S mingw-w64-x86_64-gcc make --noconfirm】→ 並按下鍵盤的【Enter】鍵來執行 GCC、Make 的安裝

.image ./images/99/99.04.12.png

# --------------------------------------------------

* 在 Windows 內安裝 C/C++ 程式編譯器：GCC、Make

- 12、接下來要讓 Windows 知道 gcc、make 編譯器的位置，所以要設置「環境變數」

- 請先確定「gcc.exe」編譯器被安裝在「C:\msys64\mingw64\bin」路徑底下

- 請注意隨著 MSYS 版本不同，安裝路徑也會不同，請以當時的安裝路徑來設置「環境變數」

.image ./images/99/99.04.13.png

# --------------------------------------------------

* 在 Windows 內安裝 C/C++ 程式編譯器：GCC、Make

- 再來確定「make.exe」編譯器被安裝在「C:\msys64\usr\bin」路徑底下

- 請注意隨著 MSYS 版本不同，安裝路徑也會不同，請以當時的安裝路徑來設置「環境變數」

.image ./images/99/99.04.14.png

# --------------------------------------------------

* 在 Windows 內安裝 C/C++ 程式編譯器：GCC、Make

- 請點選左下角的【開始選單】→ 點選左側的【Windows 系統】→ 點選【控制台】

.image ./images/99/99.04.15.png

# --------------------------------------------------

* 在 Windows 內安裝 C/C++ 程式編譯器：GCC、Make

- 點選「控制台」的【系統及安全性】鈕

.image ./images/99/99.04.16.png

# --------------------------------------------------

* 在 Windows 內安裝 C/C++ 程式編譯器：GCC、Make

- 點選【系統】鈕

.image ./images/99/99.04.17.png

# --------------------------------------------------

* 在 Windows 內安裝 C/C++ 程式編譯器：GCC、Make

- 點選左側的【進階系統設定】鈕

.image ./images/99/99.04.18.png

# --------------------------------------------------

* 在 Windows 內安裝 C/C++ 程式編譯器：GCC、Make

- 在「進階」頁面中，點選最下方的【環境變數(N)…】鈕

.image ./images/99/99.04.19.png

# --------------------------------------------------

* 在 Windows 內安裝 C/C++ 程式編譯器：GCC、Make

- 為讓此 Windows 內的所有用者均可使用 GCC、Make 編譯器，請點選下方「系統變數(S)」下面的【新增(W)…】鈕

.image ./images/99/99.04.20.png

# --------------------------------------------------

* 在 Windows 內安裝 C/C++ 程式編譯器：GCC、Make

- 首先建置 Make 編譯器路徑變數，請在「變數名稱(N):」輸入【MSYS】

- 在「變數值(V):」輸入【C:\msys64】→ 點選【確定】鈕

.image ./images/99/99.04.21.png

# --------------------------------------------------

* 在 Windows 內安裝 C/C++ 程式編譯器：GCC、Make

- 再來建置 GCC 編譯器路徑變數，請在「變數名稱(N):」輸入【MINGW】

- 在「變數值(V):」輸入【%MSYS%\mingw64】→ 點選【確定】鈕

.image ./images/99/99.04.22.png

# --------------------------------------------------

* 在 Windows 內安裝 C/C++ 程式編譯器：GCC、Make

.image ./images/99/99.04.23.png

# --------------------------------------------------

* 在 Windows 內安裝 C/C++ 程式編譯器：GCC、Make

- 接著將建置好的 GCC、Make 編譯器路徑變數加入到「Path」變數中，讓 Windows 可使用「gcc.exe」及「make.exe」指令

- 請點選下方「系統變數(S)」中的【Path】變數 → 再點選下面的【編輯(I)…】鈕

.image ./images/99/99.04.24.png

# --------------------------------------------------

* 在 Windows 內安裝 C/C++ 程式編譯器：GCC、Make

- 接著點選右方【新增(N)】鈕

.image ./images/99/99.04.25.png

# --------------------------------------------------

* 在 Windows 內安裝 C/C++ 程式編譯器：GCC、Make

- 會在下面出現可輸入的欄位，在此欄位輸入【%MINGW%\bin】變數

- 再一次點選右方的【新增(N)】鈕 → 並新增【%MSYS%\usr\bin】變數

- 完成後點選最下方的【確定】鈕

.image ./images/99/99.04.26.png

# --------------------------------------------------

* 在 Windows 內安裝 C/C++ 程式編譯器：GCC、Make

- 請點選最下方的【確定】鈕

.image ./images/99/99.04.27.png

# --------------------------------------------------

* 在 Windows 內安裝 C/C++ 程式編譯器：GCC、Make

- 請點選最下方的【確定】鈕以完成 Windows 環境變數的設定

.image ./images/99/99.04.28.png

# --------------------------------------------------

* 在 Windows 內安裝 C/C++ 程式編譯器：GCC、Make

- 14、最後要確認 Windows 可以執行「gcc.exe」及「make.exe」指令

- 請在「開始選單」上按【滑鼠右鍵】→ 再點選【Windows PowerShell(I)】

.image ./images/99/99.04.29.png

# --------------------------------------------------

* 在 Windows 內安裝 C/C++ 程式編譯器：GCC、Make

- 15、請在「PS C:\Users\user> 」右方輸入【gcc -v】指令 → 並按下鍵盤的【Enter】鍵來查看 GCC 編譯器的版本

- 接著請繼續輸入【make -v】指令 → 並按下鍵盤的【Enter】鍵來查看 Make 編譯器的版本

.image ./images/99/99.04.30.png

# --------------------------------------------------

* 5、在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 1、安裝 JDK 開發套件，請至 [[https://www.oracle.com/java/technologies/javase-downloads.html][Java SE]] 網站下載【jdk-*_windows-x64_bin.exe】安裝程式

- 請先點選官方網站的【JDK Download】鈕

.image ./images/99/99.05.03.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 接著請將網頁向下捲動到「Java SE Development Kit」，並點選【jdk-*_windows-x64_bin.exe】鈕

.image ./images/99/99.05.05.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 請勾選【I accept the Oracle Technology Network License Agreement for Oracle Java SE】鈕同意軟體使用條款

- 再點選【Download jdk-*_windows-x64_bin.exe】鈕開始下載 JDK

.image ./images/99/99.05.07.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 執行安裝程式後，請點選下方的【Next >】鈕

.image ./images/99/99.05.08.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 請直接點選【Next >】鈕將 JDK 安裝在預設位置「C:\Program Files\Java\jdk-13.0.2\」內

.image ./images/99/99.05.09.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 安裝完成後請直接點選【Close】

.image ./images/99/99.05.10.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 2、安裝 Android SDK（包含在 Android Studio 內）及 Android NDK 開發套件，請至 [[https://developer.android.com/studio][Android Studio]] 網站下載【android-studio-ide-*-windows.exe】安裝程式

- 請先點選官方網站的【DOWNLOAD ANDROID STUDIO】鈕

.image ./images/99/99.06.03.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 請勾選【I have read and agree with the above terms and conditions】鈕同意軟體使用條款

- 再點選【DOWNLOAD ANDROID STUDIO FOR WINDOWS】鈕開始下載 Android Studio

.image ./images/99/99.06.04.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 執行安裝程式後，請點選下方的【Next >】鈕

.image ./images/99/99.06.06.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 請直接點選【Next >】鈕來安裝預設的「Android Studio」、「Android Virtual Device」

.image ./images/99/99.06.07.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 請直接點選【Next >】鈕將 Android Studio 安裝在預設位置「C:\Program Files\Android\Android Studio」內

.image ./images/99/99.06.08.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 請點選【Install】鈕開始安裝 Android Studio

.image ./images/99/99.06.09.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 安裝完成後，請點選【Next >】鈕

.image ./images/99/99.06.10.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 安裝完成後請直接點選【Finish】鈕，並啟動 Android Studio（預設已勾選「Start Android Studio」）

.image ./images/99/99.06.11.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 因為沒有 Android Studio 環境設置檔，故請直接點選【OK】鈕，來使用預設的環境（預設已點選「Do not import settings」）

.image ./images/99/99.06.12.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 請直接點選【Don't send】鈕來避免 Google 匿名收集 Android Studio 的使用資料

.image ./images/99/99.06.13.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 此時會出現 Android Studio 設置精靈，請直接點選【Next】鈕繼續

.image ./images/99/99.06.14.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 請直接點選【Next】鈕來使用預設的「Standard」標準設置

.image ./images/99/99.06.15.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 請直接點選【Next】鈕來使用預設的「Light」佈景主題

.image ./images/99/99.06.16.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 請點選【Finish】鈕開始下載並安裝所選擇的 Android Studio 標準設置

.image ./images/99/99.06.17.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 請點選【Finish】鈕完成 Android Studio 標準設置安裝

.image ./images/99/99.06.18.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 3、接下來我們要使用「Android Studio SDK Manager」來安裝 Android NDK

- 請點選 Android Studio 下方的【Configure】鈕

.image ./images/99/99.06.19.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 再點選第 2 項的【SDK Manager】鈕

.image ./images/99/99.06.20.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 接著請點選上方的【SDK Tools】鈕

.image ./images/99/99.06.21.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 請勾選【NDK(Side by side)】鈕 → 再請點下方的【OK】鈕

.image ./images/99/99.06.23.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 確認完成要安裝的元件及硬碟使用空間後，請勾選【OK】鈕

.image ./images/99/99.06.24.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 請點選【Accept】同意軟體使用條款，再點選【Next】開始安裝 Android NDK

- 註：Android NDK 預設會安裝在「%USERPROFILE%\AppData\Local\Android\Sdk」內

.image ./images/99/99.06.26.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 請點選【Finish】完成 Android NDK 的安裝

.image ./images/99/99.06.27.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 4、接下來要讓 Windows 知道 JDK、Android SDK、Android NDK 套件的位置，所以要設置「環境變數」

- 首先請先確認「JDK」安裝位置在「C:\Program Files\Java\jdk-13.0.2」

- 請注意隨著 JDK 版本不同，安裝路徑也會不同，請以當時的安裝路徑來設置「環境變數」

.image ./images/99/99.06.29-jdk_folder.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 確認「Android SDK」安裝位置在「%USERPROFILE%\AppData\Local\Android\Sdk」

- 請注意隨著 Android SDK 版本不同，安裝路徑也會不同，請以當時的安裝路徑來設置「環境變數」

.image ./images/99/99.06.30-sdk_folder.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 首先請先確認「Android NDK」安裝位置在「C:\Users\user\AppData\Local\Android\Sdk\ndk\21.0.6113669」

- 請注意隨著 Android NDK 版本不同，安裝路徑也會不同，請以當時的安裝路徑來設置「環境變數」

.image ./images/99/99.06.31-ndk_folder.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 在這裡我們使用 PowerShell 來設置 Windows 的系統環境變數

- 請在「開始選單」上按【滑鼠右鍵】→ 再點選【Windows PowerShell (系統管理員)(A)】

- 註：若希望採視窗界面來設置「環境變數」，請參考[[http://127.0.0.1:3999/s99_%20install_extensions.slide#2][【Page. 02】]]「1、在 Windows 內安裝 C/C++ 程式編譯器：GCC、Make」章節

.image ./images/99/99.06.32.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 請依序在「PS C:\Users\user> 」右方輸入下列指令 → 並按下鍵盤的【Enter】鍵來執行

- 註：輸入指令時不包含最左邊的「PS > 」字元，此字元表示這行是要輸入的「指令」

    PS > $ENV:JDK_TEMP = "C:\Program Files\Java\jdk-13.0.2"          # 請以實際安裝的 JDK 路徑來進行設置
    PS > $ENV:SDK_TEMP = "%USERPROFILE%\AppData\Local\Android\Sdk"   # 請以實際安裝的 SDK 路徑來進行設置
    PS > $ENV:NDK_TEMP = "%ANDROID_HOME%\ndk\21.0.6113669"           # 請以實際安裝的 NDK 路徑來進行設置
    PS > [Environment]::SetEnvironmentVariable("JAVA_HOME", "$ENV:JDK_TEMP", "Machine")
    PS > [Environment]::SetEnvironmentVariable("ANDROID_HOME", "$ENV:SDK_TEMP", "Machine")
    PS > [Environment]::SetEnvironmentVariable("ANDROID_NDK_HOME", "$ENV:NDK_TEMP", "Machine")

.image ./images/99/99.06.33.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 說明：此指令「[Environment]::SetEnvironmentVariable("JAVA_HOME", "C:\Program Files\Java\jdk-13.0.2", "Machine")」等同於下圖的視窗設置

.image ./images/99/99.06.34.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 說明：此指令「[Environment]::SetEnvironmentVariable("ANDROID_HOME", "%USERPROFILE%\AppData\Local\Android\Sdk", "Machine")」等同於下圖的視窗設置

.image ./images/99/99.06.35.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 說明：此指令「[Environment]::SetEnvironmentVariable("ANDROID_NDK_HOME", "%ANDROID_HOME%\ndk\21.0.6113669", "Machine")」等同於下圖的視窗設置

.image ./images/99/99.06.36.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

- 前方指令輸入完成後，可以在 Windows 環境變數的視窗內看到設置結果

.image ./images/99/99.06.37.png

# --------------------------------------------------

* 在 Windows 內安裝 Android APP 軟體開發工具包：JDK、SDK、NDK

.image ./images/99/99.06.38.png

# --------------------------------------------------

* 介紹完畢，感謝各位！

# --------------------------------------------------