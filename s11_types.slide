# Golang 安裝與環境設定
為什麼我要學習 Go
19:30 28 Mar 2020
Tags: golang, go, cht
Summary: This is a great document you want to read.
OldURL: former-path-for-this-doc

陳敬翔
資訊學系培訓師, 中華電信學院
oneleo@cht.com.tw
https://github.com/oneleo
@oneleo760823

// --------------------------------------------------

## Golang 安裝與環境設定

// --------------------------------------------------

## 條件式與迴圈

.play -numbers -edit ./code/c11/c11p01types/main.go /START OMIT/,/END OMIT/

// --------------------------------------------------

## Golang 安裝與環境設定

- 您的第一支 Go 語言程式碼：假如您這麼做… **會發生錯誤！**

	1. 把接收器參數改變成沒有定義在套件的型別：_func (n <del>\*Number</del>\*int) Display() { fmt.Println(\*n) }_
		- ↪ 您只能對目前套件中有宣告過的型別定義方法。對全域定義的型別像是 int 定義新的方法會造成編譯錯誤。

    2. 把 Double 的接收器參數改成無指標型別：_func (n <del>\*</del>Number) Double() { <del>\*</del>n \*= 2 }_
		- ↪ 接收器參數從方法調用時會接收到的是值的副本。假如 Double 函式只變更了副本，原始值是不會在 Double 結束後變更的。
// --------------------------------------------------

## Golang 安裝與環境設定

- 您的第一支 Go 語言程式碼：假如您這麼做… **會發生錯誤！**

    3. 調用方法時，對一個需要指標作為接收器的引數使用未存放在變數的值：_Number(4).Double()_
		- ↪ 當您調用一個需要指標作為接收器的方法，Go 會自動地轉換值到指標給予接收器，前提是僅限於這個值存放在變數內。若沒有則會產生錯誤。

    4. 把 Display 方接收器參數改成無指標型別：func (n <del>\*</del>Number) Display() { fmt.Println(<del>\*</del>n) }
		- ↪ 縱使這樣做，程式碼依然會運作正常，但是這就打破慣例了！一個型別所有方法的接收器參數應該都是指標或者都是值，最好是避免兩種混用。

// --------------------------------------------------