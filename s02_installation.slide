# Golang 簡介
為什麼我要學習 Go
19:30 28 Mar 2020
Tags: golang, go, cht
Summary: This is a great document you want to read.
OldURL: former-path-for-this-doc

陳敬翔
資訊學系培訓師, 中華電信學院
oneleo@cht.com.tw
https://github.com/oneleo
@oneleo760823

// --------------------------------------------------

## Golang 安裝與環境設定

- 有 3 種方法可以編寫 Go 語言（均以 Windows 作業系統為例）

    1. 使用線上 Go 語言編譯器
    2. 透過安裝檔在本機端建置 Go 語言開發環境
    3. 透過指令在本機端建置 Go 語言開發環境

// --------------------------------------------------

## Golang 安裝與環境設定

1. 使用線上 Go 語言編譯器

	- 官方的線上編譯器：[The Go Playground][1]
	- 第三方的線上編譯器：[go-playground][2]

[1]: https://play.golang.org/ "The Go Playground"
[2]: https://goplay.tools/ "第三方的 Go Playground"

// --------------------------------------------------

## Golang 安裝與環境設定

2. 透過安裝檔在本機端建置 Go 語言開發環境步驟

	1. 安裝 [git][1] - 在於常用的 go get 指令會需要
	2. 安裝 [go 語言核心軟體][2]
	3. 安裝 [Visual Studio Code][3] - IDE 整合開發環境
	4. 在 vscode 裡安裝 [Go for Visual Studio Code][4] - vscode go 套件
    5. 在 vscode 裡安裝 Go for Visual Studio Code 的[相依性 Go 語言套件][5]
    6. （非必須）安裝 [GCC 編譯器][6] - C 語言編譯器

[1]: https://git-scm.com/ "git"
[2]: https://golang.org/ "Go"
[3]: https://code.visualstudio.com/ "Visual Studio Code"
[4]: https://marketplace.visualstudio.com/items?itemName=golang.Go "Go for Visual Studio Code"
[5]: https://marketplace.visualstudio.com/items?itemName=golang.go#quick-start "Go for Visual Studio Code Extension Depends"
[6]: https://sourceforge.net/projects/mingw-w64/files/#mingw-w64-online-installer "GCC"

// --------------------------------------------------

## Golang 安裝與環境設定

3. 透過指令在本機端建置 Go 語言開發環境步驟

    1. 透過 PowerShell（系統管理員權限）安裝 [Chocolatey][1] - Windows 套件管理工具
    2. 透過指令安裝 [git][2]（指定參數：不要將 git 加入至右鍵選單）
		```
		> choco install -y git.install --params "/NoShellIntegration"
        > git --version
		```
    3. 透過指令安裝 [Go 語言核心軟體][3]與 [Visual Studio Code][4]
		```
		> choco install -y golang vscode
        > go version
        > code --version
		```
	4. 在 vscode 裡安裝 [Go for Visual Studio Code][5] - vscode go 套件
    5. 在 vscode 裡安裝 Go for Visual Studio Code 的[相依性 Go 語言套件][6]
    6. （非必須）透過指令安裝 [GCC 編譯器][7]
		```
		> choco install -y mingw
        > gcc --version
		```

[1]: https://chocolatey.org/install "Chocolatey"
[2]: https://chocolatey.org/packages/git.install "Chocolatey - GIT (INSTALL)"
[3]: https://chocolatey.org/packages/golang "Chocolatey - GO PROGRAMMING LANGUAGE"
[4]: https://chocolatey.org/packages/vscode "Chocolatey - VISUAL STUDIO CODE"
[5]: https://marketplace.visualstudio.com/items?itemName=golang.Go "Go for Visual Studio Code"
[6]: https://marketplace.visualstudio.com/items?itemName=golang.go#quick-start "Go for Visual Studio Code Extension Depends"
[7]: https://chocolatey.org/packages/mingw "Chocolatey - MINGW-W64"

// --------------------------------------------------

## Go 語言 Package 入門

- 以前所有的開放均要在 %GOPATH% 中進行
- Go 語言在 1.11 版本推出 go module 功能
- 隨意讓開發者 clone 專案到任何地方都可以，也統一個 Package 套件管理

// --------------------------------------------------

## Go 語言 Package 入門

- 在 macOS、Linux
    - $GOPATH
- 在 Windows PowerShell
    - $env:GOPATH
- 在 Windows 命令提示字元（C:\WINDOWS\system32\cmd.exe）
    - %GOPATH%

// --------------------------------------------------

## Go 語言 Package 入門

- 初始化 go 專案
    - go mod init "PROJECT FULL NAME"
        - 如 go mod init github.com/yourname/projectname
    - go mod tidy   # 掃描有用到的套件，紀錄目前使用的套件版本



// --------------------------------------------------

## Go 語言 Package 入門

- import 在 %GOPATH% 裡時
    - 直接引用 src/ 內的連結即可

// --------------------------------------------------

## Go 語言 Package 入門

- import 套件不是在 %GOPATH% 裡時
    - go mod [replace][1]

[1]: https://github.com/golang/go/wiki/Modules#when-should-i-use-the-replace-directive "When should I use the replace directive?"