# Golang 簡介
為什麼我要學習 Go
19:30 28 Mar 2020
Tags: golang, go, cht
Summary: This is a great document you want to read.
OldURL: former-path-for-this-doc

陳敬翔
資訊學系培訓師, 中華電信學院
oneleo@cht.com.tw
https://github.com/oneleo
@oneleo760823

// --------------------------------------------------

## 在開始課程之前…

- 請各位學員使用 PowerShell 執行以下指令以開啟投影片
	- 快速安裝 golang 環境
	```
	> choco install -y git.install --params "/NoShellIntegration"	# 安裝 Git 版控
	> choco install -y golang vscode mingw		# 安裝 Golang、VSCode、MinGW 軟體

	```
	- 請重新啟動 PowerShell 後再執行以下指令
	```
	> go install golang.org/x/tools/cmd/present@latest			# 安裝 go present 簡報軟體
	> cd $env:USERPROFILE
	> git clone https://github.com/oneleo/golang-cht.git		# 下載本課程投影片及範例
	> cd ./golang-cht		# 至本課程目錄
	> present -notes		# 啟動含備忘稿的 go present 簡報
	```

.image ./images/i01/i01.01.00-golang-cht.png _ 900

: 補充：
: 若不想重新啟動 PowerShell，可直接執行以下指令以重新載入 Path 環境變數
: > $env:Path = [System.Environment]::GetEnvironmentVariable('Path', [System.EnvironmentVariableTarget]::Machine) + ";" + [System.Environment]::GetEnvironmentVariable("Path", [System.EnvironmentVariableTarget]::User);

// --------------------------------------------------

## 關於我

.image ./images/i01/i01.01.01-Irara.jpg _ 250

- 中華電信學院培訓師

- 覺得 Java、Java Script、Python 沒有想像中來得好學、且效能與 C 語言有一大段距離

- 起先是從 [Go 程式語言][1]、[Go 線上讀書會][2]社群找到並開始接觸 Go 語言

- 原先對 Go 語言不以為意，用了後驚為天人，是我對 Go 語言的使用感想

[1]: https://www.facebook.com/groups/269001993248363 "Go 程式語言"
[2]: https://www.facebook.com/groups/1288435607857868 "Go 線上讀書會"

// --------------------------------------------------

## 關於 Go 語言

// --------------------------------------------------

## 關於 Go 語言

1. 歷史
	- Google 編譯搜尋引擎上百萬行程式碼需耗一個小時以上
	- 為提升產能於 2007/09 開展 Go， 2009/11/10 開源 Go
	- 在程式語言界尚相當年輕（C 語言是 1969 年被開發出來）

.image ./images/i01/i01.01.02-free_pack_illu_18.png _ 300

.caption _Images Reference_ by [[https://github.com/MariaLetta/free-gophers-pack][Free Gophers Pack]]

// --------------------------------------------------

## 關於 Go 語言

2. 特色
	- 省時 - 快速編寫、快速[編譯][1]、快速[測試程式][2]、快速產生[說明文件][3]
	- 簡單 - 精簡程式、關鍵字僅 [25 個][4]（[其他][5]：Python 35 個、Java 51 個、C++ 84 個）
	- 高效 - 自動釋放閒置的記憶體空間（[垃圾回收機制][6]）、可使用[指標][7]存取記憶體
	- 產能 - 輕易[同步執行][8]不同工作（[並發][9]）、有物件導向[複合][10]（has a）無[繼承][11]（is a）
	- 親民 - 對[多核心處理器][12]、[UTF-8 字元編碼][13]支援度高

[1]: https://zh.wikipedia.org/wiki/編譯語言 "編譯式語言"
[2]: https://pkg.go.dev/testing "在 Go 專案內寫測試"
[3]: https://golang.org/doc/effective_go.html#commentary "快速產生說明文件"
[4]: https://golang.org/ref/spec#Keywords "Go 語言關鍵字"
[5]: https://github.com/leighmcculloch/keywords "程式語言關鍵字"
[6]: https://zh.wikipedia.org/wiki/垃圾回收_(計算機科學) "垃圾回收"
[7]: https://golang.org/ref/spec#Pointer_types "指標型態"
[8]: https://zh.wikipedia.org/wiki/并发计算 "並發運算"
[9]: https://golang.org/doc/effective_go.html#goroutines "Goroutines"
[10]: https://golang.org/doc/effective_go.html#methods "Go 的複合（composition）實現 - 方法"
[11]: https://zh.wikipedia.org/wiki/继承_(计算机科学) "繼承"
[12]: https://zh.wikipedia.org/wiki/多元處理 "多核心處理器"
[13]: https://golang.org/ref/spec#Source_code_representation "UTF-8 字元編碼"

.image ./images/i01/i01.01.03-free_pack_illu_35.png _ 300

: 補充：
: - 省時：
: 	- [強型別](https://zh.wikipedia.org/wiki/強弱型別)
: - 簡單：
: 	- [格式一致](https://golang.org/doc/effective_go.html#formatting)
: 	- [句尾免分號](https://golang.org/doc/effective_go.html#semicolons)
: 	- [不允許宣告未用的套件及變數](https://golang.org/doc/effective_go.html#blank_unused)
: - 產能：
: 	- [官方 Go 投影片工具](https://pkg.go.dev/golang.org/x/tools/present)
:	- [Go 語言內建 http 伺服器](https://golang.org/doc/articles/wiki/#tmp_3)
:	- [在 Go 語言內執行 C 語言](https://golang.org/cmd/cgo/)

// --------------------------------------------------

## 關於 Go 語言

3. 創始人
	- [Robert Griesemer 羅伯特．格瑞史莫][1] - Google V8 JS Engine、HotSpot 開發者
	- [Rob Pike 羅勃．派克][2] - Unix 開發者、UTF-8 創始人
	- [Ken Thompson 肯．湯普遜][3] - Unix 創始人、C 語言創始人、獲 1983 年圖靈獎

[1]: https://en.wikipedia.org/wiki/Robert_Griesemer "Robert Griesemer 羅伯特．格瑞史莫"
[2]: https://zh.wikipedia.org/wiki/羅勃·派克 "Rob Pike 羅勃．派克"
[3]: https://zh.wikipedia.org/wiki/肯·汤普逊 "Ken Thompson 肯．湯普遜"

.image ./images/i01/i01.01.04-go_creator.jpg _ 600

: 補充：
: - Rob Pike 和 Ken 是貝爾實驗室 Unix 小組的成員
: - Go 語言出自於具多年程式設計經驗的大師之手，因應 Google 在 2007 年開發上遇到的困難，所創造出來

// --------------------------------------------------

## 關於 Go 語言

4. 誕生名

	```
	Subject: Re: prog lang discussion\
	From: Rob 'Commander' Pike\
	Date: Tue, Sep 25, 2007 at 3:12 PM\
	To: Robert Griesemer, Ken Thompson\
	\
	i had a couple of thoughts on the drive home.\
	\
	1\. name\
	\
	**_'go'_**. you can invent reasons for this name but it has nice properties.\
	it's **_short, easy_** to type. tools: goc, gol, goa.\
	if there's an interactive debugger/interpreter it could just be called 'go'. the suffix is .go
	```
.caption _Reference_ by [[https://kknews.cc/design/gb3m8z9.html][Go 語言：成長的十年]]

// --------------------------------------------------

## 關於 Go 語言

5. 服務面 - 常見使用 Go 語言開發的服務

- 容器 - [Docker](https://github.com/moby/moby)
- 容器 - [Kubernetes](https://github.com/kubernetes/kubernetes)
- 版控 - [Gitea](https://gitea.io/zh-tw)
- 儲存 - [Dropbox](https://github.com/dropbox/godropbox)
- 區塊鏈 - [Ethereum](https://github.com/ethereum/go-ethereum)
- 區塊鏈 - [Hyperledger](https://github.com/hyperledger/fabric)

: 補充：
: - 較有名的[臺灣企業](https://github.com/golangtw/jobs)有在招募 Go 語言工程師：
: 	- [17 直播](http://17.media)
: 	- [KKTIX](https://kktix.com)
: 	- [Dcard](https://www.dcard.tw)
: 	- [街口支付](https://www.jkos.com)
: 	- [合勤科技](https://www.zyxel.com)
: 	- [工研院](https://www.itri.org.tw)
: 	- [雷亞遊戲](https://www.rayark.com)
: 	- [聯發科技](https://www.mediatek.com)
: 	- [鴻海精密](http://www.foxconn.com.tw)
: 	- [CATCHPLAY](https://www.catchplay.com)
: 	- [Trend Micro](http://www.trendmicro.tw)
: 	- [旋轉拍賣](http://careers.carousell.com)

// --------------------------------------------------

## 快速展示

// --------------------------------------------------

## 快速展示

1. 格式一致 - 使用 IDE 存檔時自動排版

	- 因自動排版，所使用的 space 和 tab 鍵最少（Go 語言只用 tab 鍵）
	- 因自動排版，團隊能量可集中在解決問題上 → 而不是看別人程式碼看到火大
	- 線上展示：使用官方的 [The Go Playground][1] 平臺

[1]: https://play.golang.org/p/uUANEh970a "Go 自動排版"

.image ./images/i01/i01.01.05-tabs_spaces.jpg _ 600

// --------------------------------------------------

## 快速展示

2. 句尾免分號 - 程式每列句尾不需使用分號結束

	- PTT 鄉民自嘲：程式寫的好，要飯要到老（這是玩笑話）
	- debug 時當局者迷，常常會忘了最基本的結尾
	- 但，至少寫 Go 語言可以減少（ㄉ一 ㄐ一ˊ）錯誤的機會…

.image ./images/i01/i01.01.06-semicolon.png _ 1000

// --------------------------------------------------

## 快速展示

3. 省時 - 說明文件產生器

- 方法 1：在本地端執行 GoDoc 指令

	```powershell
	> go install golang.org/x/tools/cmd/godoc@latest	# 安裝說明文件產生器
	> cd $env:USERPROFILE
	> git clone https://github.com/oneleo/golang-cht.git	# 下載本課程投影片及範例
	> cd .\golang-cht
	> godoc -http=:6060 -play				# 啟動文件產生器

	```

	- 查看【[http://127.0.0.1:6060][1]】點選左上方【Third party】搜尋 c01p01mymath
- 方法 2：將程式碼上傳 [Github][2]，即可於 [Go 文件][3]官網查看。

[1]: http://127.0.0.1:6060 "Go Doc"
[2]: https://github.com/oneleo/golang-cht "oneleo/golang-cht"
[3]: https://pkg.go.dev/github.com/oneleo/golang-cht "pkg.go.dev"

.image ./images/i01/i01.01.07-godoc.png _ 800

// --------------------------------------------------

## 快速展示

4. 省時 - 內建單元測試工具

	```powershell
	> cd $env:USERPROFILE
	> git clone https://github.com/oneleo/golang-cht.git				# 下載本課程投影片及範例
	> cd golang-cht
	> go test -v -run . github.com\oneleo\golang-cht\code\c01\c01p01mymath		# 執行功能性測試
	> go test -v -bench . github.com\oneleo\golang-cht\code\c01\c01p01mymath	# 執行效能測試
	```

.image ./images/i01/i01.01.08-gotest.png _ 1000

// --------------------------------------------------

## 快速展示

5. 產能 - 官方 Go 投影片工具

- Go Present 的[說明文件][1]
- 安裝 go present

	```powershell
	> go install golang.org/x/tools/cmd/present@latest	# 安裝 go present 簡報軟體
	> cd $env:USERPROFILE
	> go get -u -v github.com/oneleo/golang-cht		# 下載本課程投影片及範例
	> cd ./golang-cht					# 至本課程目錄
	> present -notes					# 啟動含備忘稿的 go present 簡報
	```

- 查看【[http://127.0.0.1:3999][2]】觀看投影片。
- 點選鍵盤【N】鈕可查看備忘稿。

[1]: https://pkg.go.dev/golang.org/x/tools/present "Go Present"
[2]: http://127.0.0.1:3999 "Go Doc"

: 補充：
: 目前 talks.godoc.org 尚無法使用新 present 語法，
: 可以追蹤此 issue：https://github.com/golang/gddo/issues/680

// --------------------------------------------------

## 快速展示

5. 產能 - 官方 Go 投影片工具

- Go Present 特殊技：可直接在投影片中執行 Go 程式（甚至可直接編輯）

.play -numbers -edit ./code/c01/c01p02hello/hello.go /START OMIT/,/END OMIT/

.image ./images/i01/i01.01.09-free_pack_illu_10.png _ 350

// --------------------------------------------------

## 快速展示

6. 產能 - Go 語言內建 http 伺服器

- Go 語言有內建 [http 伺服器][1]可快速建置網站前後端

[1]: https://golang.org/doc/articles/wiki/#tmp_3 "Introducing the net/http package (an interlude)"

.play -numbers -edit ./code/c01/c01p03myhttp/myhttp.go /START OMIT/,/END OMIT/

: 補充：
: http.Handler 介面定義 ServeHTTP(writer ResponseWriter, request *Request) 方法
: io.Writer 介面定義 Write([]byte) (n int, err error) 方法
: http.ResponseWriter 介面包含 io.Writer 介面
: 參考：[Structural Typing: Compile Time Duck Typing](https://blog.carbonfive.com/structural-typing-compile-time-duck-typing/)

// --------------------------------------------------

## 快速展示

7. 產能 - 可以[在 Go 語言內執行 C 語言][1]（須先安裝 MinGW-W64 等 GCC compiler）

[1]: https://golang.org/cmd/cgo/ "cgo"

.play -numbers -edit ./code/c01/c01p04mycgo/mycgo.go /START OMIT/,/END OMIT/

: 注意：
: - 若要在 Go 語言內執行 C 語言，執行環境需安裝如 [MinGW-W64](https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win64/) 等 GCC compiler。

// --------------------------------------------------

## 準備好要來學習 Go 了嗎？

- 假如您編寫的是命令列工具，Go 可以從同一個程式碼，建立成 Windows、macOS 以及 Linux 可用的執行檔。
- 假如您編寫的是網路伺服器，它可以幫助您搞定多使用者同時連線。
- 除此之外，無論您寫什麼，它會幫您確認您的程式碼是否更加地易於維護及成長。
- 等不及要開始了嗎？讓我們開始 Go 吧！

.image ./images/i01/i01.01.10-free_pack_goro_2.png _ 350

// --------------------------------------------------

## 參考資料

- 收集的[參考資料][1]

[1]: https://github.com/oneleo/go-course-code